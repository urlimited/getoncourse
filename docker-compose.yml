version: "3.9"  # optional since v1.27.0
services:

  #PHP API_GATEWAY
  api_gateway:
    build:
      context: .
      dockerfile: deployment/dockers/api_gateway.dockerfile
    image: api_gateway
    container_name: api_gateway
    #restart: unless-stopped
    tty: true
    environment:
      SERVICE_NAME: api_gateway
      SERVICE_TAGS: dev
      XDEBUG_ENABLED: 1
      XDEBUG_REMOTE_AUTOSTART: 1
      XDEBUG_MAXNESTING_LEVEL: 1000
      XDEBUG_REMOTE_CONNECT_BACK: 1
      XDEBUG_REMOTE_HOST: host.docker.internal
      PHP_IDE_CONFIG: serverName=localhost
    working_dir: /var/www/api_gateway
    volumes:
      - ./api_gateway/:/var/www/api_gateway
      #- ./php/local.ini:/usr/local/etc/php/conf.d/local.ini
    networks:
      - app-network

  #PHP API_USERS
  api_courses:
    build:
      context: .
      dockerfile: deployment/dockers/api_courses.dockerfile
    image: api_courses
    container_name: api_courses
    #restart: unless-stopped
    tty: true
    environment:
      SERVICE_NAME: api_courses
      SERVICE_TAGS: dev
    working_dir: /var/www/api_courses
    volumes:
      - ./api_courses/:/var/www/api_courses
      #- ./deployment/configs/php_api_users.ini:/usr/local/etc/php/conf.d/local.ini
    networks:
      - app-network

  #Nginx Service
  webserver:
    build:
      context: .
      dockerfile: deployment/dockers/nginx.dockerfile
    image: nginx
    container_name: webserver
    #restart: unless-stopped
    tty: true
    environment:
      SERVICE_NAME: webserver
      SERVICE_TAGS: dev
    ports:
      - "127.0.0.2:81:80"
      - "443:443"
    volumes:
      - ./:/var/www
      #- ./nginx/conf.d/:/etc/nginx/conf.d/
    networks:
      - app-network


  #MySQL Service users
  mysql_users:
    image: mysql:8.0.23
    container_name: mysql_users
    #restart: unless-stopped
    tty: true
    ports:
      - "3308:3306"
    command: --init-file /data/application/init.sql
    environment:
      MYSQL_ROOT_PASSWORD: secret
      SERVICE_TAGS: dev
      SERVICE_NAME: mysql_users
    volumes:
      - dbdata_users:/var/lib/mysql/
      #- ./mysql/my.cnf:/etc/mysql/my.cnf
      - ./deployment/configs/mysql_users_init.sql:/data/application/init.sql
    networks:
      - app-network


  #MySQL Service courses
  mysql_courses:
    image: mysql:8.0.23
    container_name: mysql_courses
    #restart: unless-stopped
    tty: true
    ports:
      - "3307:3306"
    command: --init-file /data/application/init.sql
    environment:
      MYSQL_ROOT_PASSWORD: secret
      SERVICE_TAGS: dev
      SERVICE_NAME: mysql_courses
    volumes:
      - dbdata_courses:/var/lib/mysql/
      #- ./mysql/my.cnf:/etc/mysql/my.cnf
      - ./deployment/configs/mysql_courses_init.sql:/data/application/init.sql
    networks:
      - app-network

  #RabbitMQ Service AMPQ service
  service_rabbitmq:
    image: rabbitmq:3-management-alpine
    container_name: service_rabbitmq
    ports:
      - "5673:5672"
      - "15673:15672"
    volumes:
      - ~/.docker-conf/rabbitmq/data/:/var/lib/rabbitmq/
      - ~/.docker-conf/rabbitmq/log/:/var/log/rabbitmq
    networks:
      - app-network


#Docker Networks
networks:
  app-network:
    driver: bridge

#Volumes
volumes:
  dbdata_users:
    driver: local
  dbdata_courses:
    driver: local